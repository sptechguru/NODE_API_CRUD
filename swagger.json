 {
    "swagger": "2.0",
    "definitions":{
    "info": {
        "description": "NodeJS CRUD API project for & Register ",
        "version": "1.0.0",
        "title": "Node Js Crud Api"
    }
},
    "schemes": ["http" ,"https"],
    "host": "http://localhost:3000",
    "paths" : {
        "/student" : {
            "get" : {
                "summary" : "Get all Students Details",
                "description": "Get all the tasks",
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema":{
                            "type":"object",
                            "properties":{
                                "_id":{
                                    "type":"string",
                                    "description":"Get all Students",
                                    "examples":"62bd4744b528cc6ffdbb9747"
                                },
                                "name":{
                                    "type":"string",
                                    "description":"Get all Students",
                                    "examples":"raj"
                                },
                                "email_Id":{
                                    "type":"string",
                                    "description":"Get all Students",
                                    "examples":"raj1234@gmail.com"
                                },
                                "phone_Number":{
                                    "type":"number",
                                    "description":"Get Students phone_Number",
                                    "examples":"7412589632"
                                },
                                "address":{
                                    "type":"string",
                                    "description":"Get Students address",
                                    "examples":"demo test 34 555"
                                }
                            }
                            }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },

        "/students" : {
            "post" : {
                "summary" : "Save the task",
                "description": "Save the task",
                "produces": ["application/json"],
                "consumes": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "task object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "task" : {
                                    "type": "object",
                                    "$ref": "#/definitions/Task"
                                } 
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/students/{id}" : {
            "patch" : {
                "summary" : "Update the tasks",
                "description": "Update the tasks",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "task id that needs to be deleted",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "task object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "task" : {
                                    "type": "object",
                                    "$ref": "#/definitions/Task"
                                } 
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/student/{id}" : {
            "delete" : {
                "summary" : "Delete students",
                "description": "Delete students",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "task id that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        }
    }
}
